% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/l_system.R
\name{l_system}
\alias{l_system}
\title{L-system}
\usage{
l_system(
  axiom,
  rules,
  n = 1,
  angle,
  initial_angle = pi/2,
  draw_f = NULL,
  return_string = FALSE,
  extra_info = FALSE,
  remove_duplicates = TRUE
)
}
\arguments{
\item{axiom}{A string of symbols representing the initial state of the
system.}

\item{rules}{A list of named strings forming the rules.}

\item{n}{The number of iterations.}

\item{angle}{The angle in radians which determines the change in direction
for every "+" or "-".}

\item{initial_angle}{The initial angle of the first line in radians.}

\item{draw_f}{A character vector of symbols the replace with "F" in the
instructions.}

\item{return_string}{Logical. If \code{TRUE} the function returns the string of
instructions after \code{n} iterations. Otherwise they are converted to line
segments.}

\item{extra_info}{Logical. If \code{TRUE} return additional information for all
lines: length, angle, stack depth.}

\item{remove_duplicates}{Logical. If \code{TRUE} remove duplicated lines from the
result. Does not consider the direction of the lines, so a line from
(0, 0) to (1, 1) is not a duplicate of a line from (1, 1) to (0, 0).}
}
\value{
Depending on the value of \code{return_string} either the string of
instructions after \code{n} iterations or a data frame of class "l_system" with
the columns x0, y0, x1, and y1 determining the endpoints of the line
segments. Includes additional columns if \code{extra_info} is \code{TRUE}.
}
\description{
Generate L-systems.
}
\details{
List of valid instructions:
\describe{
\item{\code{F}}{Draw a line in the current direction.}
\item{\code{+} or \code{-}}{Turn by angle.}
\item{\code{[} or \verb{]}}{Save or load current state.}
\item{\code{@}}{Multiply the line length by the following numerical argument.}
\item{\code{!}}{Flip the angle direction.}
}
}
\examples{
# plant:
l_plant <- l_system(
    axiom = "X",
    rules = list(
        X = "F+[[X]-X]-F[-FX]+X",
        F = "FF"
    ),
    n = 7,
    angle = pi * 0.15,
    initial_angle = pi * 0.45
)
plot(l_plant, col = colorRampPalette(c("#008000", "#00FF00"))(100))

# dragon curve:
l_dragon <- l_system(
    axiom = "FX",
    rules = list(
        X = "X+YF+",
        Y = "-FX-Y"
    ),
    n = 12,
    angle = pi / 2,
    initial_angle = 0
)
plot(l_dragon, col = rainbow(nrow(l_dragon)))

# sierpinski triangle:
l_triangle <- l_system(
    axiom = "F-G-G",
    rules = list(
        F = "F-G+F+G-F",
        G = "GG"
    ),
    n = 6,
    angle = radians(120),
    initial_angle = radians(60),
    draw_f = "G"
)
plot(l_triangle)

# changing line length, flipping angle, and using extra_info = TRUE
# to vary color and line thickness:
l_tree <- l_system(
    axiom = "X",
    rules = list(X = "F[+@.7X]F![-@.6X]F"),
    n = 10,
    angle = radians(22.5),
    extra_info = TRUE
)
plot(
    l_tree,
    col = ifelse(l_tree$depth < 6, "sienna", "forestgreen"),
    lwd = l_tree$depth / max(l_tree$depth) * -2 + 3
)

}
\seealso{
\code{\link[=plot.l_system]{plot.l_system()}}
}
